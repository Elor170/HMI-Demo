services:
  # hmi-frontend:
  #   build:
  #     context: ./
  #     dockerfile: .docker/Dockerfile.prod.service
  #     args:
  #       ServiceName: hmi-frontend
  #   environment:
  #     - VITE_STREAMER_SERVER=http://localhost:$STREAMER_BACKEND_PORT
  #     - PORT=$HMI_FRONTEND_PORT
  #   ports:
  #     - "$HMI_FRONTEND_PORT:$HMI_FRONTEND_PORT"
  #   networks:
  #     - hmi_network

  streamer-backend:
    build:
      context: ./
      dockerfile: .docker/Dockerfile.prod.service
      args:
        ServiceName: streamer-backend
    environment:
      - PORT=$STREAMER_BACKEND_PORT
      - MONGO_URI=$MONGO_URI
    ports:
      - "$STREAMER_BACKEND_PORT:$STREAMER_BACKEND_PORT"
    depends_on:
      - hmi-mongo-db
    networks:
      - hmi_network

  waterfall-backend:
    build:
      context: ./
      dockerfile: .docker/Dockerfile.prod.service
      args:
        ServiceName: waterfall-backend
    environment:
      RABBITMQ_HOST: $RABBITMQ_HOST
      RABBITMQ_USER: $RABBITMQ_USER
      RABBITMQ_PASS: $RABBITMQ_PASS
      PORT: $WATERFALL_BACKEND_PORT
      WATERFALL_QUEUE: $WATERFALL_QUEUE
    ports:
      - "$WATERFALL_BACKEND_PORT:$WATERFALL_BACKEND_PORT"
    depends_on:
      - rabbitmq
    networks:
      - hmi_network

  waterfall-streamer:
    environment:
      RABBITMQ_HOST: $RABBITMQ_HOST
      RABBITMQ_USER: $RABBITMQ_USER
      RABBITMQ_PASS: $RABBITMQ_PASS
      PORT: $WATERFALL_STREAMER_PORT
      WATERFALL_QUEUE: $WATERFALL_QUEUE
    build:
      context: ./
      dockerfile: .docker/Dockerfile.prod.service
      args:
        ServiceName: waterfall-streamer
    ports:
      - "$WATERFALL_STREAMER_PORT:$WATERFALL_STREAMER_PORT"
    depends_on:
      - rabbitmq
    networks:
      - hmi_network

  3d-game:
    build:
      context: ./3D-Game
      dockerfile: ../.docker/Dockerfile.game-server
      args:
        ServiceName: 3d-game
    ports:
      - 8000:${GAME_PORT} 
    networks:
      - hmi_network

  hmi-mongo-db:
    image: mongo:latest
    container_name: hmi-mongo-db
    ports:
      - "27017:27017"
    volumes:
      - ~/db:/data/db
    networks:
      - hmi_network

  mongoexpress:
    image: mongo-express
    container_name: mongo-express
    environment:
      ME_CONFIG_MONGODB_SERVER: hmi-mongo-db
      ME_CONFIG_MONGODB_URL: hmi-mongo-db:27017/
    restart: always
    ports:
      - "8081:8081"
    depends_on:
      - hmi-mongo-db
    networks:
      - hmi_network

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: $RABBITMQ_USER
      RABBITMQ_DEFAULT_PASS: $:RABBITMQ_PASS
    restart: always
    ports:
      - "15671:15671"
      - "15672:15672"
      - "15691:15691"
      - "15692:15692"
      - "25672:25672"
      - "4369:4369"
      - "5671:5671"
      - "5672:5672"
    networks:
      - hmi_network

networks:
  hmi_network:
    driver: bridge
