FROM node:22-alpine AS build
WORKDIR /app
RUN corepack enable
RUN corepack use pnpm

COPY pnpm-*.yaml .
COPY tsconfig.*.json .

WORKDIR /app/libs/hmi-helper
COPY libs/hmi-helper .
RUN pnpm i

WORKDIR /app/packages/frontend
COPY packages/hmi-frontend .
RUN pnpm i
RUN pnpm build

# FROM nginx:1.27.2-alpine AS base
# COPY --from=build /app/packages/frontend/dist /usr/share/nginx/html
# # COPY nginx/frontend.conf /etc/nginx/conf.d/default.conf
# COPY nginx/env.sh /docker-entry.sh
# RUN chmod +x /docker-entry.sh
# EXPOSE 80
# ENTRYPOINT ["/docker-entry.sh"]
# CMD [ "nginx", "-g", "daemon off;" ]

FROM nginx:1.27.2-alpine AS base
COPY --from=build /app/packages/frontend/dist /usr/share/nginx/html
COPY nginx/frontend.conf /etc/nginx/conf.d/default.conf
COPY nginx/env.sh /docker-entrypoint.d/env.sh
RUN chmod +x /docker-entrypoint.d/env.sh

CMD [ "nginx", "-g", "daemon off;" ]