services:
  hmi-frontend:
    extends:
      file: .docker/docker-compose.service.dev.yml
      service: dev-service
    environment:
      - VITE_STREAMER_SERVER=http://$SERVER_IP:$STREAMER_BACKEND_PORT
      - VITE_STREAMER_LOGGER=http://$SERVER_IP:$STREAMER_LOGGER_PORT
      - VITE_WATERFALL_BACKEND_URL=http://$SERVER_IP:$WATERFALL_BACKEND_PORT
      - VITE_WATERFALL_STREAMER_URL=http://$SERVER_IP:$WATERFALL_STREAMER_PORT
      - VITE_3D_GAME_SERVER=http://localhost:$GAME_PORT
      - VITE_MAPS_SERVER_URL=$MAPS_SERVER_URL
    build:
      args:
        ServiceName: hmi-frontend
    develop:
      watch:
        - action: sync
          path: ./packages/hmi-frontend/src
          target: /app/packages/service/src
        - action: sync+restart
          path: ./packages/hmi-frontend/.env
          target: /app/packages/service/.env
        - action: rebuild
          path: ./packages/hmi-frontend/package.json
          target: /app/packages/service/package.json
    ports:
      - "$HMI_FRONTEND_PORT:80"
  game-server:
    environment:
      - MONGO_URI=$MONGO_URI
    container_name: hmi-game-server
    build:
      dockerfile: .docker/Dockerfile.game-server
    develop:
      watch:
        - action: sync
          path: ./packages/game-server/src
          target: /app/packages/service/src
        - action: sync+restart
          path: ./packages/game-server/.env
          target: /app/packages/service/.env
        - action: rebuild
          path: ./packages/game-server/package.json
          target: /app/packages/service/package.json
    ports:
      - "$GAME_PORT:80"
    depends_on:
      - hmi-mongo-db
    networks:
      - hmi_dev_network
  video-streamer:
    build:
      dockerfile: .docker/Dockerfile.streamer
      context: .
      args:
        url: https://drive.google.com/file/d/1r-zZ05GueeKXs-vGYsppoiXQ4lWaIJE8/view
    ports:
      - "$STREAMER_BACKEND_PORT:80"

  streamer-logger:
    extends:
      file: .docker/docker-compose.service.dev.yml
      service: dev-service
    environment:
      - PORT=$STREAMER_LOGGER_PORT
      - MONGO_URI=$MONGO_URI
    build:
      args:
        ServiceName: streamer-logger
    develop:
      watch:
        - action: sync
          path: ./packages/streamer-logger/src
          target: /app/packages/service/src
        - action: sync+restart
          path: ./packages/streamer-logger/.env
          target: /app/packages/service/.env
        - action: rebuild
          path: ./packages/streamer-logger/package.json
          target: /app/packages/service/package.json
    ports:
      - "$STREAMER_LOGGER_PORT:80"
    depends_on:
      - hmi-mongo-db

  waterfall-backend:
    extends:
      file: .docker/docker-compose.service.dev.yml
      service: dev-service
    environment:
      RABBITMQ_HOST: hmi-rabbitmq
      RABBITMQ_USER: $RABBITMQ_USER
      RABBITMQ_PASS: $RABBITMQ_PASS
      WATERFALL_QUEUE: $WATERFALL_QUEUE
      WATERFALL_DB: $WATERFALL_DB
      MONGO_URI: $MONGO_URI
      FRONTEND_URL: http://$FRONTEND_IP:$HMI_FRONTEND_PORT
    build:
      args:
        ServiceName: waterfall-backend
    develop:
      watch:
        - action: sync
          path: ./packages/waterfall-backend/src
          target: /app/packages/service/src
        - action: sync+restart
          path: ./packages/waterfall-backend/.env
          target: /app/packages/service/.env
        - action: rebuild
          path: ./packages/waterfall-backend/package.json
          target: /app/packages/service/package.json
    ports:
      - "$WATERFALL_BACKEND_PORT:80"
    depends_on:
      - hmi-rabbitmq

  waterfall-streamer:
    environment:
      RABBITMQ_HOST: hmi-rabbitmq
      RABBITMQ_USER: $RABBITMQ_USER
      RABBITMQ_PASS: $RABBITMQ_PASS
      WATERFALL_QUEUE: $WATERFALL_QUEUE
    extends:
      file: .docker/docker-compose.service.dev.yml
      service: dev-service
    build:
      args:
        ServiceName: waterfall-streamer
    develop:
      watch:
        - action: sync
          path: ./packages/waterfall-streamer/src
          target: /app/packages/service/src
        - action: sync+restart
          path: ./packages/waterfall-streamer/.env
          target: /app/packages/service/.env
        - action: rebuild
          path: ./packages/waterfall-streamer/package.json
          target: /app/packages/service/package.json
    ports:
      - "$WATERFALL_STREAMER_PORT:80"
    depends_on:
      - hmi-rabbitmq

  hmi-mongo-db:
    image: mongo:latest
    container_name: hmi-mongo-db
    ports:
      - "27017:27017"
    volumes:
      - ~/db:/data/db

    networks:
      - hmi_dev_network

  mongoexpress:
    image: mongo-express
    environment:
      ME_CONFIG_MONGODB_SERVER: hmi-mongo-db
      ME_CONFIG_MONGODB_URL: hmi-mongo-db:27017/
    restart: always
    ports:
      - "8081:8081"
    depends_on:
      - hmi-mongo-db
    networks:
      - hmi_dev_network

  hmi-rabbitmq:
    image: rabbitmq:management
    container_name: hmi-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: $RABBITMQ_USER
      RABBITMQ_DEFAULT_PASS: $RABBITMQ_PASS
    restart: always
    ports:
      - "15671:15671"
      - "15672:15672"
      - "15691:15691"
      - "15692:15692"
      - "25672:25672"
      - "4369:4369"
      - "5671:5671"
      - "5672:5672"
    networks:
      - hmi_dev_network

networks:
  hmi_dev_network:
    driver: bridge
