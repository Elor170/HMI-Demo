# .github/workflows/publish-all-services.yml
name: Publish All Services

on:
  schedule:
    - cron: "25 5 * * *"
  push:
    branches: ["main"]
    tags: ["v*.*.*"]
  pull_request:
    branches: ["main"]

jobs:
  repo-owner-name:
    runs-on: ubuntu-latest
    outputs:
      lowercase: ${{ steps.toLowerCase.outputs.lowercase }}
    steps:
      - name: Get registry owner name
        id: toLowerCase
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ github.repository_owner }}

  release-on-push:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Release new version
        uses: rymndhng/release-on-push-action@master
        with:
          bump_version_scheme: minor
        
  docker:
    needs: [repo-owner-name, release-on-push]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      matrix:
        include:
          - image: hmi-frontend
            context: .
            dockerfile: .docker/Dockerfile.frontend

          - image: streamer-server
            context: .
            dockerfile: .docker/Dockerfile.streamer
            build-args: VideoURL=https://ia601707.us.archive.org/4/items/4k-football-juventus-vs-tottenham-dolby-atmos/4kFootball%20Juventus%20vs%20Tottenham%20Dolby%20Atmos.mp4

          - image: waterfall-backend
            context: .
            dockerfile: .docker/Dockerfile.prod.service
            build-args: ServiceName=waterfall-backend

          - image: waterfall-streamer
            context: .
            dockerfile: .docker/Dockerfile.prod.service
            build-args: ServiceName=waterfall-streamer

          - image: game-server
            context: ./3D-Game
            dockerfile: .docker/Dockerfile.game-server

    steps:
      - name: Checkout repositroy
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.repository_owner}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Extreact metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{needs.repo-owner-name.outputs.lowercase}}/${{matrix.image}}
          tags: |
            type=semver,pattern={{raw}}
          flavor: |
            latest=${{ github.event_name != 'pull_request' }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ${{matrix.context}}
          file: ${{matrix.dockerfile}}
          push: true
          tags: ${{steps.meta.outputs.tags}}
          labels: ${{steps.meta.outputs.labels}}
          build-args: ${{matrix.build-args}}
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
