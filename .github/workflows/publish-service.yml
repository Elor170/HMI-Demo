name: Publish Service

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  workflow_call:
    inputs:
      service_name:
        required: true
        type: string

      registry:
        required: true
        type: string
        default: ghcr.io

env:
  # Use docker.io for Docker Hub if empty
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ inputs.service_name }}
  REGISTRY: ${{inputs.registry}}
  NAMESPACE: mpz

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.repository_owner}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Get registry owner name
        id: toLowerCase
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{github.repository_owner}}
          images: |
            ${{github.repository_owner}}/${{env.IMAGE_NAME}}
          tags: type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{env.REGISTRY}}/${{steps.toLowerCase.outputs.lowercase}}/${{env.IMAGE_NAME}}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          tag: ghcr.io/${{github.actor}}/${{inputs.service_name}}:latest
          context: .
          file: .docker/Dockerfile.prod.service
          build-args: ServiceName=${{inputs.service_name}}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{steps.meta.outputs.tags}}
          labels: ${{steps.meta.outputs.labels}}
          load: true
